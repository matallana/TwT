{
  "version": 3,
  "file": "views.js",
  "sourceRoot": "",
  "sources": [
    "@uirouter/angular/statebuilders/views.ts"
  ],
  "names": [],
  "mappings": ";AACA,OAAO,EAAE,UAAU,EAAe,MAAM,gBAAgB,CAAC;AAEzD,OAAO,EAAC,IAAI,EAAE,OAAO,EAAC,MAAM,gBAAgB,CAAC;AAG7C,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAC;AACxC,OAAO,EAAC,WAAW,EAAC,MAAM,gBAAgB,CAAC;;;;;;;;;;AAW3C,MAAM,0BAA0B,KAAkB;IAChD,IAAI,KAAK,GAA0C,EAAE,EACjD,WAAW,GAAG,KAAK,CAAC,KAAK,IAAI,EAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC,EAAC,CAAC;IAEtF,OAAO,CAAC,WAAW,EAAE,UAAU,MAA0B,EAAE,IAAY;QACrE,IAAI,GAAG,IAAI,IAAI,UAAU,CAAC;QAC1B,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAAC,MAAM,GAAG,EAAE,SAAS,EAAE,MAAa,EAAE,CAAC;QAC9D,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;YAAC,MAAM,CAAC;QAE5C,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;QACxB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;QAEpB,IAAI,UAAU,GAAG,WAAW,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;QAClF,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC,UAAU,CAAC;QAC3C,MAAM,CAAC,oBAAoB,GAAG,UAAU,CAAC,mBAAmB,CAAC;QAE7D,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;KACtB,CAAC,CAAC;IACH,MAAM,CAAC,KAAK,CAAC;CACd;AAED,IAAI,EAAE,GAAG,CAAC,CAAC;AACX,IAAA;IAIE,uBAAmB,IAAgB,EAAS,QAA4B;QAArD,SAAI,GAAJ,IAAI,CAAY;QAAS,aAAQ,GAAR,QAAQ,CAAoB;mBAH1D,EAAE,EAAE;sBACA,IAAI;KAEuD;IAE7E,4BAAI,GAAJ;QACE,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC/B;wBAjDH;IAkDC,CAAA;AATD,yBASC",
  "sourcesContent": [
    "/** @module ng2 */ /** */\nimport { isFunction, StateObject } from \"@uirouter/core\";\nimport {PathNode} from \"@uirouter/core\";\nimport {pick, forEach} from \"@uirouter/core\";\nimport {ViewConfig} from \"@uirouter/core\";\nimport {Ng2ViewDeclaration} from \"../interface\";\nimport {services} from \"@uirouter/core\";\nimport {ViewService} from \"@uirouter/core\";\n\n/**\n * This is a [[StateBuilder.builder]] function for Angular `views`.\n *\n * When the [[StateBuilder]] builds a [[State]] object from a raw [[StateDeclaration]], this builder\n * handles the `views` property with logic specific to @uirouter/angular.\n *\n * If no `views: {}` property exists on the [[StateDeclaration]], then it creates the `views` object and\n * applies the state-level configuration to a view named `$default`.\n */\nexport function ng2ViewsBuilder(state: StateObject) {\n  let views: { [key: string]: Ng2ViewDeclaration } = {},\n      viewsObject = state.views || {\"$default\": pick(state, [\"component\", \"bindings\"])};\n\n  forEach(viewsObject, function (config: Ng2ViewDeclaration, name: string) {\n    name = name || \"$default\"; // Account for views: { \"\": { template... } }\n    if (isFunction(config)) config = { component: config as any };\n    if (Object.keys(config).length == 0) return;\n\n    config.$type = \"ng2\";\n    config.$context = state;\n    config.$name = name;\n\n    let normalized = ViewService.normalizeUIViewTarget(config.$context, config.$name);\n    config.$uiViewName = normalized.uiViewName;\n    config.$uiViewContextAnchor = normalized.uiViewContextAnchor;\n\n    views[name] = config;\n  });\n  return views;\n}\n\nlet id = 0;\nexport class Ng2ViewConfig implements ViewConfig {\n  $id: number = id++;\n  loaded: boolean = true;\n\n  constructor(public path: PathNode[], public viewDecl: Ng2ViewDeclaration) { }\n\n  load() {\n    return services.$q.when(this);\n  }\n}\n"
  ]
}